{"version":3,"sources":["App.js","components/Edit.js","components/Create.js","components/Show.js","serviceWorker.js","index.js"],"names":["App","props","state","contacts","axios","get","then","res","setState","data","console","log","class","to","aria-hidden","this","map","c","id","name","address","Component","Edit","onChange","e","contact","target","value","onSubmit","preventDefault","city","postalCode","phone","put","match","params","result","history","push","for","type","placeholder","email","Create","post","Show","delete","onClick","bind","Boolean","window","location","hostname","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.4a8570d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state= {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/contacts')\n      .then(res => {\n        this.setState({ contacts: res.data });\n        console.log(this.state.contacts);\n      });\n  }\n\n  render() {\n    return (\n        <div class=\"container\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h3 class=\"panel-title\">CONTACT LIST</h3>\n            </div>\n            <div class=\"panel-body\">\n              <h4><Link to=\"/create\"><span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>Add Contact</Link></h4>\n              <table class=\"table table-stripe\">\n                 <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Address</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                      {this.state.contacts.map(c =>\n                      <tr>\n                        <td><Link to={`/show/${c.id}`}>{c.name}</Link></td>\n                        <td>{c.address}</td>\n                      </tr>\n                    )}\n                  </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Edit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contact: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/contacts/'+this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({ contact: res.data });\r\n        console.log(this.state.contact);\r\n      });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state.contact\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({contact:state});\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, address, city, postalCode, phone } = this.state.contact;\r\n\r\n    axios.put('/contacts/'+this.props.match.params.id, { name, address, city, postalCode, phone })\r\n      .then((result) => {\r\n        this.props.history.push(\"/show/\"+this.props.match.params.id)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              EDIT Contact\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <h4><Link to={`/show/${this.state.contact.id}`}><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span> Contact List</Link></h4>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"name\">Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={this.state.contact.name} onChange={this.onChange} placeholder=\"Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Address:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"address\" value={this.state.contact.address} onChange={this.onChange} placeholder=\"Address\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"author\">City:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"city\" value={this.state.contact.city} onChange={this.onChange} placeholder=\"City\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"published_date\">Phone Number:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"phone\" value={this.state.contact.phone} onChange={this.onChange} placeholder=\"Phone Number\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"description\">Email:</label>\r\n                <input type=\"email\" class=\"form-control\" name=\"email\" value={this.state.contact.email} onChange={this.onChange} placeholder=\"Email Address\" />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-default\">Update</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Create extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\taddress: '',\r\n\t\t\tcity: '',\r\n\t\t\tphone: '',\r\n\t\t\temail: ''\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tonChange = (e) => {\r\n    \tconst state = this.state\r\n    \tstate[e.target.name] = e.target.value;\r\n    \tthis.setState(state);\r\n  \t}\r\n\r\n  \tonSubmit = (e) => {\r\n    \te.preventDefault();\r\n    \tconst { name, address, city, phone, email } = this.state;\r\n    \taxios.post('/contacts', { name, address, city, phone, email })\r\n      \t\t.then((result) => {\r\n        \t\tthis.props.history.push(\"/\")\r\n      \t\t});\r\n  \t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { name, address, city, phone, email } = this.state;\r\n\t\treturn (\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"panel panel-default\">\r\n\t\t\t\t\t\t<div class=\"panel-heading\">\r\n\t\t\t\t\t\t\t<h3 class=\"panel-title\">ADD CONTACT</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t\t\t\t<h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span>Contacts List</Link></h4>\r\n\t\t\t\t\t\t\t<form onSubmit={this.onSubmit}>\r\n              \t\t\t\t\t<div class=\"form-group\">\r\n                \t\t\t\t\t<label for=\"isbn\">Name:</label>\r\n                \t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} placeholder=\"Name\" />\r\n              \t\t\t\t\t</div>\r\n              \t\t\t\t\t<div class=\"form-group\">\r\n                \t\t\t\t\t<label for=\"title\">Address:</label>\r\n                \t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"address\" value={address} onChange={this.onChange} placeholder=\"Address\" />\r\n              \t\t\t\t\t</div>\r\n              \t\t\t\t\t<div class=\"form-group\">\r\n                \t\t\t\t\t<label for=\"author\">City:</label>\r\n                \t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"city\" value={city} onChange={this.onChange} placeholder=\"City\" />\r\n              \t\t\t\t\t</div>\r\n              \t\t\t\t\t<div class=\"form-group\">\r\n                \t\t\t\t\t<label for=\"published_date\">Phone:</label>\r\n                \t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"phone\" value={phone} onChange={this.onChange} placeholder=\"Phone Number\" />\r\n              \t\t\t\t\t</div>\r\n              \t\t\t\t\t<div class=\"form-group\">\r\n                \t\t\t\t\t<label for=\"publisher\">Email:</label>\r\n                \t\t\t\t\t<input type=\"email\" class=\"form-control\" name=\"email\" value={email} onChange={this.onChange} placeholder=\"Email Address\" />\r\n              \t\t\t\t\t</div>\r\n              \t\t\t\t\t<button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n            \t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Show extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contact: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/contacts/'+this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({ contact: res.data });\r\n        console.log(this.state.contact);\r\n      });\r\n  }\r\n\r\n  delete(id){\r\n    console.log(id);\r\n    axios.delete('/contacts/'+id)\r\n      .then((result) => {\r\n        this.props.history.push(\"/\")\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              Contact Details\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Contacts List</Link></h4>\r\n            <dl>\r\n              <dt>Name:</dt>\r\n              <dd>{this.state.contact.name}</dd>\r\n              <dt>Address:</dt>\r\n              <dd>{this.state.contact.address}</dd>\r\n              <dt>City:</dt>\r\n              <dd>{this.state.contact.city}</dd>\r\n              <dt>Phone Number:</dt>\r\n              <dd>{this.state.contact.phone}</dd>\r\n              <dt>Email Address:</dt>\r\n              <dd>{this.state.contact.email}</dd>\r\n            </dl>\r\n            <Link to={`/edit/${this.state.contact.id}`} class=\"btn btn-success\">Edit</Link>&nbsp;\r\n            <button onClick={this.delete.bind(this, this.state.contact.id)} class=\"btn btn-danger\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Show;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './App.css';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}